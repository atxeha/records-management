// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL") // This will be read from .env file
}

model User {
  id       String   @id @default(cuid())
  name     String
  email    String?   @unique
  username String   @unique
  password String
  createdAt DateTime @default(now())
}

model PurchaseRequest {
  id          Int      @id @default(autoincrement())
  receivedBy String
  docTitle String
  department  String
  purpose     String
  receivedOn DateTime
  releasedOn DateTime?
  status      String   @default("pending")
  createdAt   DateTime @default(now())
}

model RequisitionIssueSlip {
  id           Int      @id @default(autoincrement())
  receivedBy   String
  docTitle String
  department String
  purpose      String
  receivedOn DateTime
  releasedOn DateTime?
  status String @default("pending")
  createdAt    DateTime @default(now())
}

model CheckLog {
  id          Int      @id @default(autoincrement())
  checkNumber String
  issuedTo    String
  amount      Float
  dateIssued  DateTime
  createdAt   DateTime @default(now())
}

model PettyCash {
  id         Int      @id @default(autoincrement())
  receivedBy String
  amount Float
  purpose    String
  department String
  receivedOn DateTime
  releasedOn DateTime?
  status     String   @default("pending")
  createdAt  DateTime @default(now())
}

model Franchise {
  id            Int      @id @default(autoincrement())
  franchiseCode BigInt @unique
  franchiseName String
  issuedBy      String
  issuedTo      String
  startDate DateTime
  endDate DateTime
  createdAt     DateTime @default(now())
}

model Voucher {
  id            Int      @id @default(autoincrement())
  payee         String
  amount        Float
  purpose       String
  receivedBy  String
  receivedOn DateTime
  releasedOn DateTime?
  status    String @default("pending")
  createdAt     DateTime @default(now())
}

model ObligationRequest {
  id           Int      @id @default(autoincrement())
  receivedBy   String
  department String
  purpose      String
  amount BigInt
  receivedOn DateTime
  releasedOn DateTime?
  status  String  @default("pending")
  createdAt    DateTime @default(now())
}

model Schedule {
  id          Int      @id @default(autoincrement())
  description String
  venue       String
  official    String   @default("admin")
  date        DateTime
  isDone      Boolean  @default(false)
  isCanceled  Boolean  @default(false)
  createdAt   DateTime @default(now())
}

model Qoute {
  id Int @id @default(autoincrement())
  title String
  description String
  createdAt DateTime @default(now())
}